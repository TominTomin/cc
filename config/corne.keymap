/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        home {
            bindings = <&to 0>;
            key-positions = <38 39>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <16 19>;
        };

        mousemode {
            bindings = <&tog 4>;
            key-positions = <36 38>;
        };

        tognm {
            bindings = <&tog 3>;
            key-positions = <39 6>;
        };

        leftnumb {
            bindings = <&tog 3>;
            key-positions = <38 5>;
        };

        rightnav {
            bindings = <&tog 1>;
            key-positions = <39 18>;
        };

        leftnav {
            bindings = <&tog 1>;
            key-positions = <38 17>;
        };

        leftfffff {
            bindings = <&tog 2>;
            key-positions = <38 0>;
        };

        rightfff {
            bindings = <&tog 2>;
            key-positions = <39 11>;
        };

        othermousemodessss {
            bindings = <&tog 4>;
            key-positions = <39 41>;
        };

        bluyee {
            bindings = <&none>;
            key-positions = <0 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt DEL TAB  &kp Q  &kp W  &kp E     &kp R  &kp T                     &kp Y                 &kp U  &kp I      &kp O    &kp P     &kp BACKSPACE
&kp LSHFT    &kp A  &kp S  &kp D     &kp F  &kp G                     &kp H                 &kp J  &kp K      &kp L    &kp SEMI  &mt ESC SPACE
&kp LCTRL    &kp Z  &kp X  &kp C     &kp V  &kp B                     &kp N                 &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp APOS
                           &kp LGUI  &mo 1  &mt LEFT_CONTROL SPACE    &mt LEFT_SHIFT ENTER  &mo 3  &kp RALT
            >;
        };

        navigation {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &trans                      &kp UP                      &trans                          &trans    &trans  &trans                                  &kp UP                      &trans                          &trans  &trans
&trans  &trans  &kp LEFT                    &kp DOWN                    &kp RIGHT                       &trans    &trans  &kp LEFT                                &kp DOWN                    &kp RIGHT                       &trans  &trans
&trans  &trans  &mt RIGHT_PARENTHESIS LPAR  &mt RIGHT_BRACE LEFT_BRACE  &mt RIGHT_BRACKET LEFT_BRACKET  &trans    &trans  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &mt RIGHT_BRACE LEFT_BRACE  &mt RIGHT_BRACKET LEFT_BRACKET  &trans  &trans
                                            &trans                      &trans                          &trans    &trans  &trans                                  &trans
            >;
        };

        flayer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F12  &trans  &kp F7  &kp F8  &kp F9  &trans    &trans  &kp F7  &kp F8  &kp F9  &trans  &kp F12
&kp F11  &trans  &kp F4  &kp F5  &kp F6  &trans    &trans  &kp F4  &kp F5  &kp F6  &trans  &kp F11
&kp F10  &trans  &kp F1  &kp F2  &kp F3  &trans    &trans  &kp F1  &kp F2  &kp F3  &trans  &kp F10
                         &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        numbers {
            bindings = <
&trans                                  &kp MINUS  &kp N7  &kp N8  &kp N9  &kp PLUS    &kp PLUS  &kp N7  &kp N8   &kp N9  &kp MINUS  &trans
&kp EQUAL                               &kp FSLH   &kp N4  &kp N5  &kp N6  &kp STAR    &kp STAR  &kp N4  &kp N5   &kp N6  &kp FSLH   &kp EQUAL
&mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &kp DOT    &kp N1  &kp N2  &kp N3  &kp N0      &kp N0    &kp N1  &kp N2   &kp N3  &kp DOT    &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS
                                                           &kp N0  &trans  &trans      &trans    &trans  &kp DOT
            >;
        };

        mouse {
            bindings = <
&trans  &trans  &trans  &trans     &trans     &trans       &trans     &trans     &trans     &trans  &trans     &trans
&trans  &trans  &trans  &trans     &trans     &trans       &trans     &trans     &trans     &trans  &trans     &mkp MCLK
&trans  &trans  &trans  &trans     &trans     &trans       &trans     &trans     &trans     &trans  &mkp LCLK  &mkp RCLK
                        &mkp LCLK  &mkp MCLK  &mkp RCLK    &mkp LCLK  &mkp MCLK  &mkp RCLK
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans  &trans  &trans  &bt BT_CLR_ALL  &bt BT_CLR    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &trans
&trans  &trans  &trans  &trans  &trans          &trans        &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &trans
&trans  &trans  &trans  &trans  &trans          &trans        &trans         &trans         &trans         &trans         &trans         &trans
                        &trans  &trans          &trans        &trans         &trans         &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        fff {
            if-layers = <1 3>;
            then-layer = <2>;
        };
    };
};
